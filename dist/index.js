// @flow
"use strict";/*:: export type Expression = string | null*//*:: type Operator =
	"and" |
	"range" |
	"not" |
	"or" |
	"prefix" |
	"phrase" |
	"term" |
	"near"*//*:: type Options = { [x: string]: string | number }*/function quote(a)/*: string*/{return`'${a}'`}function objectToQuery(a)/*: string*/{if(null==a)return"";const b=Object.keys(a),c=b.length;let d=0,e=[];for(;d<c;){d++;const f=b[d],g=a[f];"string"==typeof g?e.push(`${f}="${g}"`):e.push(`${f}=${g}`)}return e.join(" ")}function toExpression(a,b,c,d)/*: Expression*/{/*:: if(value==null) return null;*/return null==b?`(${a} ${objectToQuery(d)}`+` ${c})`:`(${a} field=${b} ${objectToQuery(d)}`+` ${c})`}function isNullArray(a)/*: boolean*/{for(let b=0,c=a.length;b<c;b+=1)if(null!=a[b])return!1;return!0}module.exports={and:function(a,...b/*: Expression[]*/)/*: Expression*/{return isNullArray(b)?null:toExpression("and",void 0,b.join(" "),a)},or:function(a,...b/*: Expression[]*/)/*: Expression*/{return isNullArray(b)?null:toExpression("or",void 0,b.join(" "),a)},not:function(a,b)/*: Expression*/{return null==b?null:toExpression("not",void 0,b,a)},rangeNum:function(a,b,c,d)/*: Expression*/{if(null==a)throw new Error("Field must be defined in range");if(null==b&&null==c)return null;let e=null;return e=null==b&&null!=c?`{,${c}]`:null==c&&null!=b?`[${b},}`:`[${b},${c}]`,toExpression("range",a,e,d)},rangeStr:function(a,b,c,d)/*: Expression*/{if(null==a)throw new Error("Field must be defined in range");if(null==b&&null==c)return null;let e=null;return e=null==b&&null!=c?`{,'${c}']`:null==c&&null!=b?`['${b}',}`:`['${b}','${c}']`,toExpression("range",a,e,d)},termNum:function(a,b,c)/*: Expression*/{return null==b?null:toExpression("term",a,b,c)},termStr:function(a,b,c)/*: Expression*/{return null==b?null:toExpression("term",a,quote(b),c)},matchall:"(matchall)",near:function(a,b,c,d)/*: Expression*/{return null==b?null:(null==d?d={distance:c}:d.distance=c,toExpression("near",a,quote(b.join(" ")),d))},phrase:function(a,b,c)/*: Expression*/{return null==b?null:toExpression("phrase",a,quote(b),c)},prefix:function(a,b,c)/*: Expression*/{return null==b?null:toExpression("prefix",a,quote(b),c)}};
//# sourceMappingURL=index.js.map